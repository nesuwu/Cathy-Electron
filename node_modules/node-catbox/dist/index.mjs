import{openAsBlob as t}from"node:fs";import{stat as e}from"node:fs/promises";async function s(t){try{return(await e(t)).isFile()}catch{return!1}}import{resolve as r,basename as o}from"node:path";var a="depthbomb/node-catbox",i="https://catbox.moe/user/api.php",h=class{_userHash;constructor(t){t&&this.setUserHash(t)}get userHash(){return this._userHash}setUserHash(t){this._userHash=t}async uploadURL(t){const{url:e}=t,s=new FormData;s.set("reqtype","urlupload"),s.set("url",e),this._userHash&&s.set("userhash",this._userHash);const r=await this._doRequest(i,s);if(r.startsWith("https://files.catbox.moe/"))return r;throw new Error(r)}async uploadFile(e){let{path:a}=e;if(a=r(a),!await s(a))throw new Error(`Invalid file path ${a}`);const h=await t(a),n=new FormData;n.set("reqtype","fileupload"),n.set("fileToUpload",h,o(a)),this._userHash&&n.set("userhash",this._userHash);const u=await this._doRequest(i,n);if(u.startsWith("https://files.catbox.moe/"))return u;throw new Error(u)}async deleteFiles(t){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{files:e}=t,s=new FormData;s.set("reqtype","deletefiles"),s.set("userhash",this._userHash),s.set("files",e.join(" "));const r=await this._doRequest(i,s);if(r.includes("successfully"))return!0;throw new Error(r)}async createAlbum(t){const{title:e,description:s,files:r}=t,o=new FormData;o.set("reqtype","createalbum"),o.set("title",e),s&&o.set("desc",s),r&&r.length&&o.set("files",r.join(" ")),this._userHash&&o.set("userhash",this._userHash);const a=await this._doRequest(i,o);if(a.startsWith("https://catbox.moe/c/"))return a;throw new Error(a)}async editAlbum(t){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:e,title:s,description:r,files:o}=t,a=new FormData;a.set("reqtype","editalbum"),a.set("short",e),a.set("title",s),r&&a.set("desc",r),o&&o.length&&a.set("files",o.join(" ")),a.set("userhash",this._userHash);const h=await this._doRequest(i,a);if(h===`https://catbox.moe/c/${e}`)return h;throw new Error(h)}async addFilesToAlbum(t){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:e,files:s}=t,r=new FormData;r.set("reqtype","addtoalbum"),r.set("short",e),r.set("files",s.join(" ")),r.set("userhash",this._userHash);const o=await this._doRequest(i,r);if(o===`https://catbox.moe/c/${e}`)return o;throw new Error(o)}async removeFilesFromAlbum(t){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:e,files:s}=t,r=new FormData;r.set("reqtype","removefromalbum"),r.set("short",e),r.set("files",s.join(" ")),r.set("userhash",this._userHash);const o=await this._doRequest(i,r);if(o===`https://catbox.moe/c/${e}`)return o;throw new Error(o)}async removeAlbum(t){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:e}=t,s=new FormData;s.set("reqtype","deletealbum"),s.set("short",e),s.set("userhash",this._userHash);const r=await this._doRequest(i,s);if(0===r.length)return!0;throw new Error(r)}async _doRequest(t,e){return(await fetch(t,{method:"POST",headers:{"user-agent":a},body:e})).text()}};import{openAsBlob as n}from"node:fs";import{resolve as u,basename as l}from"node:path";var c=class{constructor(){}async upload(t){let{path:e,duration:r}=t;if(e=u(e),r=r??"1h",!await s(e))throw new Error(`Invalid file path ${e}`);const o=await n(e),i=new FormData;i.set("reqtype","fileupload"),i.set("fileToUpload",o,l(e)),i.set("time",r);const h=await fetch("https://litterbox.catbox.moe/resources/internals/api.php",{method:"POST",headers:{"user-agent":a},body:i}),c=await h.text();if(c.startsWith("https://litter.catbox.moe/"))return c;throw new Error(c)}};export{h as Catbox,c as Litterbox};