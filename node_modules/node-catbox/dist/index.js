"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),t=require("fs/promises");async function s(e){try{return(await t.stat.call(void 0,e)).isFile()}catch(e){return!1}}var r=require("path"),a="depthbomb/node-catbox",o="https://catbox.moe/user/api.php";exports.Catbox=class{constructor(e){e&&this.setUserHash(e)}get userHash(){return this._userHash}setUserHash(e){this._userHash=e}async uploadURL(e){const{url:t}=e,s=new FormData;s.set("reqtype","urlupload"),s.set("url",t),this._userHash&&s.set("userhash",this._userHash);const r=await this._doRequest(o,s);if(r.startsWith("https://files.catbox.moe/"))return r;throw new Error(r)}async uploadFile(t){let{path:a}=t;if(a=r.resolve.call(void 0,a),!await s(a))throw new Error(`Invalid file path ${a}`);const i=await e.openAsBlob.call(void 0,a),h=new FormData;h.set("reqtype","fileupload"),h.set("fileToUpload",i,r.basename.call(void 0,a)),this._userHash&&h.set("userhash",this._userHash);const n=await this._doRequest(o,h);if(n.startsWith("https://files.catbox.moe/"))return n;throw new Error(n)}async deleteFiles(e){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{files:t}=e,s=new FormData;s.set("reqtype","deletefiles"),s.set("userhash",this._userHash),s.set("files",t.join(" "));const r=await this._doRequest(o,s);if(r.includes("successfully"))return!0;throw new Error(r)}async createAlbum(e){const{title:t,description:s,files:r}=e,a=new FormData;a.set("reqtype","createalbum"),a.set("title",t),s&&a.set("desc",s),r&&r.length&&a.set("files",r.join(" ")),this._userHash&&a.set("userhash",this._userHash);const i=await this._doRequest(o,a);if(i.startsWith("https://catbox.moe/c/"))return i;throw new Error(i)}async editAlbum(e){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:t,title:s,description:r,files:a}=e,i=new FormData;i.set("reqtype","editalbum"),i.set("short",t),i.set("title",s),r&&i.set("desc",r),a&&a.length&&i.set("files",a.join(" ")),i.set("userhash",this._userHash);const h=await this._doRequest(o,i);if(h===`https://catbox.moe/c/${t}`)return h;throw new Error(h)}async addFilesToAlbum(e){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:t,files:s}=e,r=new FormData;r.set("reqtype","addtoalbum"),r.set("short",t),r.set("files",s.join(" ")),r.set("userhash",this._userHash);const a=await this._doRequest(o,r);if(a===`https://catbox.moe/c/${t}`)return a;throw new Error(a)}async removeFilesFromAlbum(e){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:t,files:s}=e,r=new FormData;r.set("reqtype","removefromalbum"),r.set("short",t),r.set("files",s.join(" ")),r.set("userhash",this._userHash);const a=await this._doRequest(o,r);if(a===`https://catbox.moe/c/${t}`)return a;throw new Error(a)}async removeAlbum(e){if(!this._userHash)throw new Error("A user hash is required for this operation.");const{id:t}=e,s=new FormData;s.set("reqtype","deletealbum"),s.set("short",t),s.set("userhash",this._userHash);const r=await this._doRequest(o,s);if(0===r.length)return!0;throw new Error(r)}async _doRequest(e,t){return(await fetch(e,{method:"POST",headers:{"user-agent":a},body:t})).text()}},exports.Litterbox=class{constructor(){}async upload(t){let{path:o,duration:i}=t;var h,n;if(o=r.resolve.call(void 0,o),n=()=>"1h",i=null!=(h=i)?h:n(),!await s(o))throw new Error(`Invalid file path ${o}`);const u=await e.openAsBlob.call(void 0,o),l=new FormData;l.set("reqtype","fileupload"),l.set("fileToUpload",u,r.basename.call(void 0,o)),l.set("time",i);const c=await fetch("https://litterbox.catbox.moe/resources/internals/api.php",{method:"POST",headers:{"user-agent":a},body:l}),d=await c.text();if(d.startsWith("https://litter.catbox.moe/"))return d;throw new Error(d)}};